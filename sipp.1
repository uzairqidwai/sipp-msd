.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.41.1.
.TH SIPP "1" "October 2013" "sipp " "User Commands"
.SH NAME
sipp \- manual page for sipp 
.SH DESCRIPTION
Usage:
.IP
sipp remote_host[:remote_port] [options]
.PP
Example:
.IP
Run SIPp with embedded server (uas) scenario:
.IP
\&./sipp \fB\-sn\fR uas
.IP
On the same host, run SIPp with embedded client (uac) scenario:
.IP
\&./sipp \fB\-sn\fR uac 127.0.0.1
.IP
Available options:
.PP
*** Scenario file options:
.TP
\fB\-sd\fR
: Dumps a default scenario (embedded in the SIPp executable)
.TP
\fB\-sf\fR
: Loads an alternate XML scenario file.  To learn more about XML scenario
syntax, use the \fB\-sd\fR option to dump embedded scenarios. They contain all the
necessary help.
.TP
\fB\-oocsf\fR
: Load out\-of\-call scenario.
.TP
\fB\-oocsn\fR
: Load out\-of\-call scenario.
.TP
\fB\-sn\fR
: Use a default scenario (embedded in the SIPp executable). If this option is
omitted, the Standard SipStone UAC scenario is loaded.
Available values in this version:
.TP
\- 'uac'
: Standard SipStone UAC (default).
.TP
\- 'uas'
: Simple UAS responder.
.TP
\- 'regexp'
: Standard SipStone UAC \- with regexp and variables.
.TP
\- 'branchc'
: Branching and conditional branching in scenarios \- client.
.TP
\- 'branchs'
: Branching and conditional branching in scenarios \- server.
.IP
Default 3pcc scenarios (see \fB\-3pcc\fR option):
.IP
\- '3pcc\-C\-A' : Controller A side (must be started after all other 3pcc
.IP
scenarios)
.IP
\- '3pcc\-C\-B' : Controller B side.
\- '3pcc\-A'   : A side.
\- '3pcc\-B'   : B side.
.PP
*** IP, port and protocol options:
.TP
\fB\-t\fR
: Set the transport mode:
\- u1: UDP with one socket (default),
\- un: UDP with one socket per call,
\- ui: UDP with one socket per IP address. The IP addresses must be defined
.IP
in the injection file.
.IP
\- t1: TCP with one socket,
\- tn: TCP with one socket per call,
\- c1: u1 + compression (only if compression plugin loaded),
\- cn: un + compression (only if compression plugin loaded).  This plugin is
.IP
not provided with SIPp.
.TP
\fB\-i\fR
: Set the local IP address for 'Contact:','Via:', and 'From:' headers. Default
is primary host IP address.
.TP
\fB\-p\fR
: Set the local port number.  Default is a random free port chosen by the
system.
.TP
\fB\-bind_local\fR
: Bind socket to local IP address, i.e. the local IP address is used as the
source IP address.  If SIPp runs in server mode it will only listen on the
local IP address instead of all IP addresses.
.TP
\fB\-ci\fR
: Set the local control IP address
.TP
\fB\-cp\fR
: Set the local control port number. Default is 8888.
.TP
\fB\-max_socket\fR
: Set the max number of sockets to open simultaneously. This option is
significant if you use one socket per call. Once this limit is reached,
traffic is distributed over the sockets already opened. Default value is
50000
.TP
\fB\-max_reconnect\fR
: Set the the maximum number of reconnection.
.HP
\fB\-reconnect_close\fR : Should calls be closed on reconnect?
.HP
\fB\-reconnect_sleep\fR : How long (in milliseconds) to sleep between the close and reconnect?
.TP
\fB\-rsa\fR
: Set the remote sending address to host:port for sending the messages.
.PP
*** SIPp overall behavior options:
.TP
\fB\-v\fR
: Display version and copyright information.
.TP
\fB\-bg\fR
: Launch SIPp in background mode.
.TP
\fB\-nostdin\fR
: Disable stdin.
.TP
\fB\-plugin\fR
: Load a plugin.
.TP
\fB\-sleep\fR
: How long to sleep for at startup. Default unit is seconds.
.TP
\fB\-skip_rlimit\fR
: Do not perform rlimit tuning of file descriptor limits.  Default: false.
.TP
\fB\-buff_size\fR
: Set the send and receive buffer size.
.HP
\fB\-sendbuffer_warn\fR : Produce warnings instead of errors on SendBuffer failures.
.TP
\fB\-lost\fR
: Set the number of packets to lose by default (scenario specifications
override this value).
.TP
\fB\-key\fR
: keyword value
Set the generic parameter named "keyword" to "value".
.TP
\fB\-set\fR
: variable value
Set the global variable parameter named "variable" to "value".
.TP
\fB\-tdmmap\fR
: Generate and handle a table of TDM circuits.
A circuit must be available for the call to be placed.
Format: \fB\-tdmmap\fR {0\-3}{99}{5\-8}{1\-31}
.TP
\fB\-dynamicStart\fR
: variable value
Set the start offset of dynamic_id variable
.TP
\fB\-dynamicMax\fR
: variable value
Set the maximum of dynamic_id variable
.TP
\fB\-dynamicStep\fR
: variable value
Set the increment of dynamic_id variable
.PP
*** Call behavior options:
.TP
\fB\-aa\fR
: Enable automatic 200 OK answer for INFO, UPDATE and NOTIFY messages.
.TP
\fB\-base_cseq\fR
: Start value of [cseq] for each call.
.TP
\fB\-cid_str\fR
: Call ID string (default %u\-%p@%s).  %u=call_number, %s=ip_address,
%p=process_number, %%=% (in any order).
.TP
\fB\-d\fR
: Controls the length of calls. More precisely, this controls the duration of
\&'pause' instructions in the scenario, if they do not have a 'milliseconds'
section. Default value is 0 and default unit is milliseconds.
.TP
\fB\-deadcall_wait\fR
: How long the Call\-ID and final status of calls should be kept to improve
message and error logs (default unit is ms).
.TP
\fB\-auth_uri\fR
: Force the value of the URI for authentication.
By default, the URI is composed of remote_ip:remote_port.
.TP
\fB\-au\fR
: Set authorization username for authentication challenges. Default is taken
from \fB\-s\fR argument
.TP
\fB\-ap\fR
: Set the password for authentication challenges. Default is 'password'
.TP
\fB\-s\fR
: Set the username part of the request URI. Default is 'service'.
.TP
\fB\-default_behaviors\fR: Set the default behaviors that SIPp will use.
Possbile values are:
\- all     Use all default behaviors
\- none    Use no default behaviors
\- bye     Send byes for aborted calls
\- abortunexp      Abort calls on unexpected messages
\- pingreply       Reply to ping requests
If a behavior is prefaced with a \-, then it is turned off.  Example:
all,\-bye
.TP
\fB\-nd\fR
: No Default. Disable all default behavior of SIPp which are the following:
\- On UDP retransmission timeout, abort the call by sending a BYE or a CANCEL
\- On receive timeout with no ontimeout attribute, abort the call by sending
.IP
a BYE or a CANCEL
.IP
\- On unexpected BYE send a 200 OK and close the call
\- On unexpected CANCEL send a 200 OK and close the call
\- On unexpected PING send a 200 OK and continue the call
\- On any other unexpected message, abort the call by sending a BYE or a
.IP
CANCEL
.TP
\fB\-pause_msg_ign\fR
: Ignore the messages received during a pause defined in the scenario
.PP
*** Injection file options:
.TP
\fB\-inf\fR
: Inject values from an external CSV file during calls into the scenarios.
First line of this file say whether the data is to be read in sequence
(SEQUENTIAL), random (RANDOM), or user (USER) order.
Each line corresponds to one call and has one or more ';' delimited data
fields. Those fields can be referred as [field0], [field1], ... in the xml
scenario file.  Several CSV files can be used simultaneously (syntax: \fB\-inf\fR
f1.csv \fB\-inf\fR f2.csv ...)
.TP
\fB\-infindex\fR
: file field
Create an index of file using field.  For example \fB\-inf\fR users.csv \fB\-infindex\fR
users.csv 0 creates an index on the first key.
.TP
\fB\-ip_field\fR
: Set which field from the injection file contains the IP address from which
the client will send its messages.
If this option is omitted and the '\-t ui' option is present, then field 0 is
assumed.
Use this option together with '\-t ui'
.PP
*** RTP behaviour options:
.TP
\fB\-mi\fR
: Set the local media IP address (default: local primary host IP address)
.TP
\fB\-rtp_echo\fR
: Enable RTP echo. RTP/UDP packets received on port defined by \fB\-mp\fR are echoed
to their sender.
RTP/UDP packets coming on this port + 2 are also echoed to their sender
(used for sound and video echo).
.TP
\fB\-mb\fR
: Set the RTP echo buffer size (default: 2048).
.TP
\fB\-mp\fR
: Set the local RTP echo port number. Default is 6000.
.PP
*** Call rate options:
.TP
\fB\-r\fR
: Set the call rate (in calls per seconds).  This value can bechanged during
test by pressing '+','_','*' or '/'. Default is 10.
pressing '+' key to increase call rate by 1 * rate_scale,
pressing '\-' key to decrease call rate by 1 * rate_scale,
pressing '*' key to increase call rate by 10 * rate_scale,
pressing '/' key to decrease call rate by 10 * rate_scale.
.TP
\fB\-rp\fR
: Specify the rate period for the call rate.  Default is 1 second and default
unit is milliseconds.  This allows you to have n calls every m milliseconds
(by using \fB\-r\fR n \fB\-rp\fR m).
Example: \fB\-r\fR 7 \fB\-rp\fR 2000 ==> 7 calls every 2 seconds.
.IP
\fB\-r\fR 10 \fB\-rp\fR 5s => 10 calls every 5 seconds.
.TP
\fB\-rate_scale\fR
: Control the units for the '+', '\-', '*', and '/' keys.
.TP
\fB\-rate_increase\fR
: Specify the rate increase every \fB\-fd\fR units (default is seconds).  This allows
you to increase the load for each independent logging period.
Example: \fB\-rate_increase\fR 10 \fB\-fd\fR 10s
.IP
==> increase calls by 10 every 10 seconds.
.TP
\fB\-rate_max\fR
: If \fB\-rate_increase\fR is set, then quit after the rate reaches this value.
Example: \fB\-rate_increase\fR 10 \fB\-rate_max\fR 100
.IP
==> increase calls by 10 until 100 cps is hit.
.TP
\fB\-no_rate_quit\fR
: If \fB\-rate_increase\fR is set, do not quit after the rate reaches \fB\-rate_max\fR.
.TP
\fB\-l\fR
: Set the maximum number of simultaneous calls. Once this limit is reached,
traffic is decreased until the number of open calls goes down. Default:
.IP
(3 * call_duration (s) * rate).
.TP
\fB\-m\fR
: Stop the test and exit when 'calls' calls are processed
.TP
\fB\-users\fR
: Instead of starting calls at a fixed rate, begin 'users' calls at startup,
and keep the number of calls constant.
.PP
*** Retransmission and timeout options:
.TP
\fB\-recv_timeout\fR
: Global receive timeout. Default unit is milliseconds. If the expected message
is not received, the call times out and is aborted.
.TP
\fB\-send_timeout\fR
: Global send timeout. Default unit is milliseconds. If a message is not sent
(due to congestion), the call times out and is aborted.
.TP
\fB\-timeout\fR
: Global timeout. Default unit is seconds.  If this option is set, SIPp quits
after nb units (\fB\-timeout\fR 20s quits after 20 seconds).
.TP
\fB\-timeout_error\fR
: SIPp fails if the global timeout is reached is set (\fB\-timeout\fR option
required).
.TP
\fB\-max_retrans\fR
: Maximum number of UDP retransmissions before call ends on timeout.  Default
is 5 for INVITE transactions and 7 for others.
.TP
\fB\-max_invite_retrans\fR: Maximum number of UDP retransmissions for invite transactions before call
ends on timeout.
.TP
\fB\-max_non_invite_retrans\fR: Maximum number of UDP retransmissions for non\-invite transactions before call
ends on timeout.
.TP
\fB\-nr\fR
: Disable retransmission in UDP mode.
.TP
\fB\-rtcheck\fR
: Select the retransmission detection method: full (default) or loose.
.TP
\fB\-T2\fR
: Global T2\-timer in milli seconds
.PP
*** Third\-party call control options:
.TP
\fB\-3pcc\fR
: Launch the tool in 3pcc mode ("Third Party call control"). The passed IP
address depends on the 3PCC role.
\- When the first twin command is 'sendCmd' then this is the address of the
.TP
remote twin socket.
SIPp will try to connect to this address:port to send
.IP
the twin command (This instance must be started after all other 3PCC
scenarios).
.IP
Example: 3PCC\-C\-A scenario.
.IP
\- When the first twin command is 'recvCmd' then this is the address of the
.IP
local twin socket. SIPp will open this address:port to listen for twin
command.
.IP
Example: 3PCC\-C\-B scenario.
.TP
\fB\-master\fR
: 3pcc extended mode: indicates the master number
.TP
\fB\-slave\fR
: 3pcc extended mode: indicates the slave number
.TP
\fB\-slave_cfg\fR
: 3pcc extended mode: indicates the file where the master and slave addresses
are stored
.PP
*** Performance and watchdog options:
.TP
\fB\-timer_resol\fR
: Set the timer resolution. Default unit is milliseconds.  This option has an
impact on timers precision.Small values allow more precise scheduling but
impacts CPU usage.If the compression is on, the value is set to 50ms. The
default value is 10ms.
.TP
\fB\-max_recv_loops\fR
: Set the maximum number of messages received read per cycle. Increase this
value for high traffic level.  The default value is 1000.
.TP
\fB\-max_sched_loops\fR : Set the maximum number of calls run per event loop. Increase this value for
high traffic level.  The default value is 1000.
.TP
\fB\-watchdog_interval\fR: Set gap between watchdog timer firings.
Default is 400.
.TP
\fB\-watchdog_reset\fR
: If the watchdog timer has not fired in more than this time period, then reset
the max triggers counters.  Default is 10 minutes.
.TP
\fB\-watchdog_minor_threshold\fR: If it has been longer than this period between watchdog executions count a
minor trip.  Default is 500.
.TP
\fB\-watchdog_major_threshold\fR: If it has been longer than this period between watchdog executions count a
major trip.  Default is 3000.
.TP
\fB\-watchdog_major_maxtriggers\fR: How many times the major watchdog timer can be tripped before the test is
terminated.  Default is 10.
.TP
\fB\-watchdog_minor_maxtriggers\fR: How many times the minor watchdog timer can be tripped before the test is
terminated.  Default is 120.
.PP
*** Tracing, logging and statistics options:
.TP
\fB\-f\fR
: Set the statistics report frequency on screen. Default is 1 and default unit
is seconds.
.TP
\fB\-trace_stat\fR
: Dumps all statistics in <scenario_name>_<pid>.csv file. Use the '\-h stat'
option for a detailed description of the statistics file content.
.TP
\fB\-stat_delimiter\fR
: Set the delimiter for the statistics file
.TP
\fB\-stf\fR
: Set the file name to use to dump statistics
.TP
\fB\-fd\fR
: Set the statistics dump log report frequency. Default is 60 and default unit
is seconds.
.TP
\fB\-periodic_rtd\fR
: Reset response time partition counters each logging interval.
.TP
\fB\-trace_msg\fR
: Displays sent and received SIP messages in <scenario file
name>_<pid>_messages.log
.TP
\fB\-message_file\fR
: Set the name of the message log file.
.HP
\fB\-message_overwrite\fR: Overwrite the message log file (default true).
.TP
\fB\-trace_shortmsg\fR
: Displays sent and received SIP messages as CSV in <scenario file
name>_<pid>_shortmessages.log
.HP
\fB\-shortmessage_file\fR: Set the name of the short message log file.
.HP
\fB\-shortmessage_overwrite\fR: Overwrite the short message log file (default true).
.TP
\fB\-trace_counts\fR
: Dumps individual message counts in a CSV file.
.TP
\fB\-trace_err\fR
: Trace all unexpected messages in <scenario file name>_<pid>_errors.log.
.TP
\fB\-error_file\fR
: Set the name of the error log file.
.HP
\fB\-error_overwrite\fR : Overwrite the error log file (default true).
.TP
\fB\-trace_error_codes\fR: Dumps the SIP response codes of unexpected messages to <scenario file
name>_<pid>_error_codes.log.
.TP
\fB\-trace_calldebug\fR : Dumps debugging information about aborted calls to
<scenario_name>_<pid>_calldebug.log file.
.TP
\fB\-calldebug_file\fR
: Set the name of the call debug file.
.HP
\fB\-calldebug_overwrite\fR: Overwrite the call debug file (default true).
.TP
\fB\-trace_screen\fR
: Dump statistic screens in the <scenario_name>_<pid>_screens.log file when
quitting SIPp. Useful to get a final status report in background mode (\fB\-bg\fR
option).
.TP
\fB\-trace_rtt\fR
: Allow tracing of all response times in <scenario file name>_<pid>_rtt.csv.
.TP
\fB\-rtt_freq\fR
: freq is mandatory. Dump response times every freq calls in the log file
defined by \fB\-trace_rtt\fR. Default value is 200.
.TP
\fB\-trace_logs\fR
: Allow tracing of <log> actions in <scenario file name>_<pid>_logs.log.
.TP
\fB\-log_file\fR
: Set the name of the log actions log file.
.TP
\fB\-log_overwrite\fR
: Overwrite the log actions log file (default true).
.TP
\fB\-ringbuffer_files\fR: How many error, message, shortmessage and calldebug files should be kept
after rotation?
.TP
\fB\-ringbuffer_size\fR : How large should error, message, shortmessage and calldebug files be before
they get rotated?
.TP
\fB\-max_log_size\fR
: What is the limit for error, message, shortmessage and calldebug file sizes.
.PP
Signal handling:
.IP
SIPp can be controlled using POSIX signals. The following signals
are handled:
USR1: Similar to pressing the 'q' key. It triggers a soft exit
.IP
of SIPp. No more new calls are placed and all ongoing calls
are finished before SIPp exits.
Example: kill \fB\-SIGUSR1\fR 732
.IP
USR2: Triggers a dump of all statistics screens in
.IP
<scenario_name>_<pid>_screens.log file. Especially useful
in background mode to know what the current status is.
Example: kill \fB\-SIGUSR2\fR 732
.PP
Exit codes:
.IP
Upon exit (on fatal error or when the number of asked calls (\fB\-m\fR
option) is reached, SIPp exits with one of the following exit
code:
.IP
0: All calls were successful
1: At least one call failed
.IP
97: Exit on internal command. Calls may have been processed
99: Normal exit without calls processed
\fB\-1\fR: Fatal error
\fB\-2\fR: Fatal error binding a socket
.PP
Usage:
.IP
sipp remote_host[:remote_port] [options]
.PP
Example:
.IP
Run SIPp with embedded server (uas) scenario:
.IP
\&./sipp \fB\-sn\fR uas
.IP
On the same host, run SIPp with embedded client (uac) scenario:
.IP
\&./sipp \fB\-sn\fR uac 127.0.0.1
.IP
Available options:
.PP
*** Scenario file options:
.TP
\fB\-sd\fR
: Dumps a default scenario (embedded in the SIPp executable)
.TP
\fB\-sf\fR
: Loads an alternate XML scenario file.  To learn more about XML scenario
syntax, use the \fB\-sd\fR option to dump embedded scenarios. They contain all the
necessary help.
.TP
\fB\-oocsf\fR
: Load out\-of\-call scenario.
.TP
\fB\-oocsn\fR
: Load out\-of\-call scenario.
.TP
\fB\-sn\fR
: Use a default scenario (embedded in the SIPp executable). If this option is
omitted, the Standard SipStone UAC scenario is loaded.
Available values in this version:
.TP
\- 'uac'
: Standard SipStone UAC (default).
.TP
\- 'uas'
: Simple UAS responder.
.TP
\- 'regexp'
: Standard SipStone UAC \- with regexp and variables.
.TP
\- 'branchc'
: Branching and conditional branching in scenarios \- client.
.TP
\- 'branchs'
: Branching and conditional branching in scenarios \- server.
.IP
Default 3pcc scenarios (see \fB\-3pcc\fR option):
.IP
\- '3pcc\-C\-A' : Controller A side (must be started after all other 3pcc
.IP
scenarios)
.IP
\- '3pcc\-C\-B' : Controller B side.
\- '3pcc\-A'   : A side.
\- '3pcc\-B'   : B side.
.PP
*** IP, port and protocol options:
.TP
\fB\-t\fR
: Set the transport mode:
\- u1: UDP with one socket (default),
\- un: UDP with one socket per call,
\- ui: UDP with one socket per IP address. The IP addresses must be defined
.IP
in the injection file.
.IP
\- t1: TCP with one socket,
\- tn: TCP with one socket per call,
\- c1: u1 + compression (only if compression plugin loaded),
\- cn: un + compression (only if compression plugin loaded).  This plugin is
.IP
not provided with SIPp.
.TP
\fB\-i\fR
: Set the local IP address for 'Contact:','Via:', and 'From:' headers. Default
is primary host IP address.
.TP
\fB\-p\fR
: Set the local port number.  Default is a random free port chosen by the
system.
.TP
\fB\-bind_local\fR
: Bind socket to local IP address, i.e. the local IP address is used as the
source IP address.  If SIPp runs in server mode it will only listen on the
local IP address instead of all IP addresses.
.TP
\fB\-ci\fR
: Set the local control IP address
.TP
\fB\-cp\fR
: Set the local control port number. Default is 8888.
.TP
\fB\-max_socket\fR
: Set the max number of sockets to open simultaneously. This option is
significant if you use one socket per call. Once this limit is reached,
traffic is distributed over the sockets already opened. Default value is
50000
.TP
\fB\-max_reconnect\fR
: Set the the maximum number of reconnection.
.HP
\fB\-reconnect_close\fR : Should calls be closed on reconnect?
.HP
\fB\-reconnect_sleep\fR : How long (in milliseconds) to sleep between the close and reconnect?
.TP
\fB\-rsa\fR
: Set the remote sending address to host:port for sending the messages.
.PP
*** SIPp overall behavior options:
.TP
\fB\-v\fR
: Display version and copyright information.
.TP
\fB\-bg\fR
: Launch SIPp in background mode.
.TP
\fB\-nostdin\fR
: Disable stdin.
.TP
\fB\-plugin\fR
: Load a plugin.
.TP
\fB\-sleep\fR
: How long to sleep for at startup. Default unit is seconds.
.TP
\fB\-skip_rlimit\fR
: Do not perform rlimit tuning of file descriptor limits.  Default: false.
.TP
\fB\-buff_size\fR
: Set the send and receive buffer size.
.HP
\fB\-sendbuffer_warn\fR : Produce warnings instead of errors on SendBuffer failures.
.TP
\fB\-lost\fR
: Set the number of packets to lose by default (scenario specifications
override this value).
.TP
\fB\-key\fR
: keyword value
Set the generic parameter named "keyword" to "value".
.TP
\fB\-set\fR
: variable value
Set the global variable parameter named "variable" to "value".
.TP
\fB\-tdmmap\fR
: Generate and handle a table of TDM circuits.
A circuit must be available for the call to be placed.
Format: \fB\-tdmmap\fR {0\-3}{99}{5\-8}{1\-31}
.TP
\fB\-dynamicStart\fR
: variable value
Set the start offset of dynamic_id variable
.TP
\fB\-dynamicMax\fR
: variable value
Set the maximum of dynamic_id variable
.TP
\fB\-dynamicStep\fR
: variable value
Set the increment of dynamic_id variable
.PP
*** Call behavior options:
.TP
\fB\-aa\fR
: Enable automatic 200 OK answer for INFO, UPDATE and NOTIFY messages.
.TP
\fB\-base_cseq\fR
: Start value of [cseq] for each call.
.TP
\fB\-cid_str\fR
: Call ID string (default %u\-%p@%s).  %u=call_number, %s=ip_address,
%p=process_number, %%=% (in any order).
.TP
\fB\-d\fR
: Controls the length of calls. More precisely, this controls the duration of
\&'pause' instructions in the scenario, if they do not have a 'milliseconds'
section. Default value is 0 and default unit is milliseconds.
.TP
\fB\-deadcall_wait\fR
: How long the Call\-ID and final status of calls should be kept to improve
message and error logs (default unit is ms).
.TP
\fB\-auth_uri\fR
: Force the value of the URI for authentication.
By default, the URI is composed of remote_ip:remote_port.
.TP
\fB\-au\fR
: Set authorization username for authentication challenges. Default is taken
from \fB\-s\fR argument
.TP
\fB\-ap\fR
: Set the password for authentication challenges. Default is 'password'
.TP
\fB\-s\fR
: Set the username part of the request URI. Default is 'service'.
.TP
\fB\-default_behaviors\fR: Set the default behaviors that SIPp will use.
Possbile values are:
\- all     Use all default behaviors
\- none    Use no default behaviors
\- bye     Send byes for aborted calls
\- abortunexp      Abort calls on unexpected messages
\- pingreply       Reply to ping requests
If a behavior is prefaced with a \-, then it is turned off.  Example:
all,\-bye
.TP
\fB\-nd\fR
: No Default. Disable all default behavior of SIPp which are the following:
\- On UDP retransmission timeout, abort the call by sending a BYE or a CANCEL
\- On receive timeout with no ontimeout attribute, abort the call by sending
.IP
a BYE or a CANCEL
.IP
\- On unexpected BYE send a 200 OK and close the call
\- On unexpected CANCEL send a 200 OK and close the call
\- On unexpected PING send a 200 OK and continue the call
\- On any other unexpected message, abort the call by sending a BYE or a
.IP
CANCEL
.TP
\fB\-pause_msg_ign\fR
: Ignore the messages received during a pause defined in the scenario
.PP
*** Injection file options:
.TP
\fB\-inf\fR
: Inject values from an external CSV file during calls into the scenarios.
First line of this file say whether the data is to be read in sequence
(SEQUENTIAL), random (RANDOM), or user (USER) order.
Each line corresponds to one call and has one or more ';' delimited data
fields. Those fields can be referred as [field0], [field1], ... in the xml
scenario file.  Several CSV files can be used simultaneously (syntax: \fB\-inf\fR
f1.csv \fB\-inf\fR f2.csv ...)
.TP
\fB\-infindex\fR
: file field
Create an index of file using field.  For example \fB\-inf\fR users.csv \fB\-infindex\fR
users.csv 0 creates an index on the first key.
.TP
\fB\-ip_field\fR
: Set which field from the injection file contains the IP address from which
the client will send its messages.
If this option is omitted and the '\-t ui' option is present, then field 0 is
assumed.
Use this option together with '\-t ui'
.PP
*** RTP behaviour options:
.TP
\fB\-mi\fR
: Set the local media IP address (default: local primary host IP address)
.TP
\fB\-rtp_echo\fR
: Enable RTP echo. RTP/UDP packets received on port defined by \fB\-mp\fR are echoed
to their sender.
RTP/UDP packets coming on this port + 2 are also echoed to their sender
(used for sound and video echo).
.TP
\fB\-mb\fR
: Set the RTP echo buffer size (default: 2048).
.TP
\fB\-mp\fR
: Set the local RTP echo port number. Default is 6000.
.PP
*** Call rate options:
.TP
\fB\-r\fR
: Set the call rate (in calls per seconds).  This value can bechanged during
test by pressing '+','_','*' or '/'. Default is 10.
pressing '+' key to increase call rate by 1 * rate_scale,
pressing '\-' key to decrease call rate by 1 * rate_scale,
pressing '*' key to increase call rate by 10 * rate_scale,
pressing '/' key to decrease call rate by 10 * rate_scale.
.TP
\fB\-rp\fR
: Specify the rate period for the call rate.  Default is 1 second and default
unit is milliseconds.  This allows you to have n calls every m milliseconds
(by using \fB\-r\fR n \fB\-rp\fR m).
Example: \fB\-r\fR 7 \fB\-rp\fR 2000 ==> 7 calls every 2 seconds.
.IP
\fB\-r\fR 10 \fB\-rp\fR 5s => 10 calls every 5 seconds.
.TP
\fB\-rate_scale\fR
: Control the units for the '+', '\-', '*', and '/' keys.
.TP
\fB\-rate_increase\fR
: Specify the rate increase every \fB\-fd\fR units (default is seconds).  This allows
you to increase the load for each independent logging period.
Example: \fB\-rate_increase\fR 10 \fB\-fd\fR 10s
.IP
==> increase calls by 10 every 10 seconds.
.TP
\fB\-rate_max\fR
: If \fB\-rate_increase\fR is set, then quit after the rate reaches this value.
Example: \fB\-rate_increase\fR 10 \fB\-rate_max\fR 100
.IP
==> increase calls by 10 until 100 cps is hit.
.TP
\fB\-no_rate_quit\fR
: If \fB\-rate_increase\fR is set, do not quit after the rate reaches \fB\-rate_max\fR.
.TP
\fB\-l\fR
: Set the maximum number of simultaneous calls. Once this limit is reached,
traffic is decreased until the number of open calls goes down. Default:
.IP
(3 * call_duration (s) * rate).
.TP
\fB\-m\fR
: Stop the test and exit when 'calls' calls are processed
.TP
\fB\-users\fR
: Instead of starting calls at a fixed rate, begin 'users' calls at startup,
and keep the number of calls constant.
.PP
*** Retransmission and timeout options:
.TP
\fB\-recv_timeout\fR
: Global receive timeout. Default unit is milliseconds. If the expected message
is not received, the call times out and is aborted.
.TP
\fB\-send_timeout\fR
: Global send timeout. Default unit is milliseconds. If a message is not sent
(due to congestion), the call times out and is aborted.
.TP
\fB\-timeout\fR
: Global timeout. Default unit is seconds.  If this option is set, SIPp quits
after nb units (\fB\-timeout\fR 20s quits after 20 seconds).
.TP
\fB\-timeout_error\fR
: SIPp fails if the global timeout is reached is set (\fB\-timeout\fR option
required).
.TP
\fB\-max_retrans\fR
: Maximum number of UDP retransmissions before call ends on timeout.  Default
is 5 for INVITE transactions and 7 for others.
.TP
\fB\-max_invite_retrans\fR: Maximum number of UDP retransmissions for invite transactions before call
ends on timeout.
.TP
\fB\-max_non_invite_retrans\fR: Maximum number of UDP retransmissions for non\-invite transactions before call
ends on timeout.
.TP
\fB\-nr\fR
: Disable retransmission in UDP mode.
.TP
\fB\-rtcheck\fR
: Select the retransmission detection method: full (default) or loose.
.TP
\fB\-T2\fR
: Global T2\-timer in milli seconds
.PP
*** Third\-party call control options:
.TP
\fB\-3pcc\fR
: Launch the tool in 3pcc mode ("Third Party call control"). The passed IP
address depends on the 3PCC role.
\- When the first twin command is 'sendCmd' then this is the address of the
.TP
remote twin socket.
SIPp will try to connect to this address:port to send
.IP
the twin command (This instance must be started after all other 3PCC
scenarios).
.IP
Example: 3PCC\-C\-A scenario.
.IP
\- When the first twin command is 'recvCmd' then this is the address of the
.IP
local twin socket. SIPp will open this address:port to listen for twin
command.
.IP
Example: 3PCC\-C\-B scenario.
.TP
\fB\-master\fR
: 3pcc extended mode: indicates the master number
.TP
\fB\-slave\fR
: 3pcc extended mode: indicates the slave number
.TP
\fB\-slave_cfg\fR
: 3pcc extended mode: indicates the file where the master and slave addresses
are stored
.PP
*** Performance and watchdog options:
.TP
\fB\-timer_resol\fR
: Set the timer resolution. Default unit is milliseconds.  This option has an
impact on timers precision.Small values allow more precise scheduling but
impacts CPU usage.If the compression is on, the value is set to 50ms. The
default value is 10ms.
.TP
\fB\-max_recv_loops\fR
: Set the maximum number of messages received read per cycle. Increase this
value for high traffic level.  The default value is 1000.
.TP
\fB\-max_sched_loops\fR : Set the maximum number of calls run per event loop. Increase this value for
high traffic level.  The default value is 1000.
.TP
\fB\-watchdog_interval\fR: Set gap between watchdog timer firings.
Default is 400.
.TP
\fB\-watchdog_reset\fR
: If the watchdog timer has not fired in more than this time period, then reset
the max triggers counters.  Default is 10 minutes.
.TP
\fB\-watchdog_minor_threshold\fR: If it has been longer than this period between watchdog executions count a
minor trip.  Default is 500.
.TP
\fB\-watchdog_major_threshold\fR: If it has been longer than this period between watchdog executions count a
major trip.  Default is 3000.
.TP
\fB\-watchdog_major_maxtriggers\fR: How many times the major watchdog timer can be tripped before the test is
terminated.  Default is 10.
.TP
\fB\-watchdog_minor_maxtriggers\fR: How many times the minor watchdog timer can be tripped before the test is
terminated.  Default is 120.
.PP
*** Tracing, logging and statistics options:
.TP
\fB\-f\fR
: Set the statistics report frequency on screen. Default is 1 and default unit
is seconds.
.TP
\fB\-trace_stat\fR
: Dumps all statistics in <scenario_name>_<pid>.csv file. Use the '\-h stat'
option for a detailed description of the statistics file content.
.TP
\fB\-stat_delimiter\fR
: Set the delimiter for the statistics file
.TP
\fB\-stf\fR
: Set the file name to use to dump statistics
.TP
\fB\-fd\fR
: Set the statistics dump log report frequency. Default is 60 and default unit
is seconds.
.TP
\fB\-periodic_rtd\fR
: Reset response time partition counters each logging interval.
.TP
\fB\-trace_msg\fR
: Displays sent and received SIP messages in <scenario file
name>_<pid>_messages.log
.TP
\fB\-message_file\fR
: Set the name of the message log file.
.HP
\fB\-message_overwrite\fR: Overwrite the message log file (default true).
.TP
\fB\-trace_shortmsg\fR
: Displays sent and received SIP messages as CSV in <scenario file
name>_<pid>_shortmessages.log
.HP
\fB\-shortmessage_file\fR: Set the name of the short message log file.
.HP
\fB\-shortmessage_overwrite\fR: Overwrite the short message log file (default true).
.TP
\fB\-trace_counts\fR
: Dumps individual message counts in a CSV file.
.TP
\fB\-trace_err\fR
: Trace all unexpected messages in <scenario file name>_<pid>_errors.log.
.TP
\fB\-error_file\fR
: Set the name of the error log file.
.HP
\fB\-error_overwrite\fR : Overwrite the error log file (default true).
.TP
\fB\-trace_error_codes\fR: Dumps the SIP response codes of unexpected messages to <scenario file
name>_<pid>_error_codes.log.
.TP
\fB\-trace_calldebug\fR : Dumps debugging information about aborted calls to
<scenario_name>_<pid>_calldebug.log file.
.TP
\fB\-calldebug_file\fR
: Set the name of the call debug file.
.HP
\fB\-calldebug_overwrite\fR: Overwrite the call debug file (default true).
.TP
\fB\-trace_screen\fR
: Dump statistic screens in the <scenario_name>_<pid>_screens.log file when
quitting SIPp. Useful to get a final status report in background mode (\fB\-bg\fR
option).
.TP
\fB\-trace_rtt\fR
: Allow tracing of all response times in <scenario file name>_<pid>_rtt.csv.
.TP
\fB\-rtt_freq\fR
: freq is mandatory. Dump response times every freq calls in the log file
defined by \fB\-trace_rtt\fR. Default value is 200.
.TP
\fB\-trace_logs\fR
: Allow tracing of <log> actions in <scenario file name>_<pid>_logs.log.
.TP
\fB\-log_file\fR
: Set the name of the log actions log file.
.TP
\fB\-log_overwrite\fR
: Overwrite the log actions log file (default true).
.TP
\fB\-ringbuffer_files\fR: How many error, message, shortmessage and calldebug files should be kept
after rotation?
.TP
\fB\-ringbuffer_size\fR : How large should error, message, shortmessage and calldebug files be before
they get rotated?
.TP
\fB\-max_log_size\fR
: What is the limit for error, message, shortmessage and calldebug file sizes.
.PP
Signal handling:
.IP
SIPp can be controlled using POSIX signals. The following signals
are handled:
USR1: Similar to pressing the 'q' key. It triggers a soft exit
.IP
of SIPp. No more new calls are placed and all ongoing calls
are finished before SIPp exits.
Example: kill \fB\-SIGUSR1\fR 732
.IP
USR2: Triggers a dump of all statistics screens in
.IP
<scenario_name>_<pid>_screens.log file. Especially useful
in background mode to know what the current status is.
Example: kill \fB\-SIGUSR2\fR 732
.PP
Exit codes:
.IP
Upon exit (on fatal error or when the number of asked calls (\fB\-m\fR
option) is reached, SIPp exits with one of the following exit
code:
.IP
0: All calls were successful
1: At least one call failed
.IP
97: Exit on internal command. Calls may have been processed
99: Normal exit without calls processed
\fB\-1\fR: Fatal error
\fB\-2\fR: Fatal error binding a socket
